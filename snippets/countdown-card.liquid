<style>
  .countdown_card {
    width: 100%;
    height: 120px;
    border-radius: 12px;
    overflow: hidden;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.09375vw;
    padding: 0 1.09375vw 0 1.71875vw;
    margin-top: 25px;
  }

  .countdown_card .countdown_card_bg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
  }

  .countdown_card .countdown_card_desc {
    font-family: Roboto;
    font-weight: 500;
    font-size: 0.9375vw;
    line-height: 24px;
    letter-spacing: 0%;
    vertical-align: middle;
    text-transform: capitalize;
    color: #ffffff;
  }

  .countdown_card .countdown_card_box {
    display: flex;
    align-items: flex-start;
    gap: 0.625vw;
    margin-top: 5px;
  }

  .countdown_card .countdown_card_box_item {
    text-align: center;
  }

  .countdown_card .countdown_card_box_item_num {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: Roboto;
    font-weight: 500;
    font-size: 20px;
    line-height: 24px;
    letter-spacing: 0%;
    vertical-align: middle;
    text-transform: capitalize;
    color: #222222;
  }

  .countdown_card .countdown_card_box_item_text {
    font-family: Roboto;
    font-weight: 400;
    font-size: 12px;
    line-height: 24px;
    letter-spacing: 0%;
    vertical-align: middle;
    text-transform: capitalize;
    color: #999999;
  }

  .countdown_card .countdown_card_box_gap {
    font-family: Roboto;
    font-weight: 500;
    font-size: 14px;
    line-height: 24px;
    letter-spacing: 0%;
    vertical-align: middle;
    text-transform: capitalize;
    color: #fff;
    margin-top: 8px;
  }

  .countdown_card .countdown_card_logo {
    width: 3.75vw;
    object-fit: contain;
  }

  @media screen and (max-width: 768px) {
    .countdown_card {
      gap: 2.8vw;
      padding: 0 2.8vw 0 4.4vw;
    }

    .countdown_card .countdown_card_desc {
      font-size: 16px;
    }

    .countdown_card .countdown_card_box {
      gap: 3.2vw;
    }

    .countdown_card .countdown_card_logo {
      width: 14.2vw;
    }
  }
</style>

{%- assign countdown = shop.metaobjects.countdown_date_time['liquid-buff'] -%}

{% if countdown != blank %}
  <div class="countdown_card" data-end-date="{{ countdown.datetime | date: "%Y-%m-%dT%H:%M:%SZ" }}">
    <img src="{{ countdown.background | image_url }}" class="countdown_card_bg">
    <div class="countdown_card_left">
      <div class="countdown_card_desc">{{ countdown.description }}</div>
      <div class="countdown_card_box">
        <div class="countdown_card_box_item" data-type="hour">
          <div class="countdown_card_box_item_num"></div>
          <div class="countdown_card_box_item_text">Hour</div>
        </div>
        <div class="countdown_card_box_gap">:</div>
        <div class="countdown_card_box_item" data-type="minute">
          <div class="countdown_card_box_item_num"></div>
          <div class="countdown_card_box_item_text">Min</div>
        </div>
        <div class="countdown_card_box_gap">:</div>
        <div class="countdown_card_box_item" data-type="second">
          <div class="countdown_card_box_item_num"></div>
          <div class="countdown_card_box_item_text">Sec</div>
        </div>
      </div>
    </div>
    <img src="{{ countdown.logo | image_url }}" class="countdown_card_logo">
  </div>
{% endif %}

<script>
  const countdown = document.querySelector('.countdown_card');
  const endDateStr = countdown.getAttribute('data-end-date');
  const endDate = new Date(endDateStr);

  const updateCountdownInnerHTML = (hours, minutes, seconds) => {
    countdown.querySelector(".countdown_card_box_item[data-type='hour'] .countdown_card_box_item_num").innerHTML =
      String(hours).padStart(2, '0');
    countdown.querySelector(".countdown_card_box_item[data-type='minute'] .countdown_card_box_item_num").innerHTML =
      String(minutes).padStart(2, '0');
    countdown.querySelector(".countdown_card_box_item[data-type='second'] .countdown_card_box_item_num").innerHTML =
      String(seconds).padStart(2, '0');
  };

  function updateCountdown() {
    const now = new Date();
    const diff = endDate - now;
    let hours = 0,
      minutes = 0,
      seconds = 0;

    if (diff <= 0) {
      countdown.style.display = 'none';
      return;
    }

    hours = Math.floor(diff / (1000 * 60 * 60));
    minutes = Math.floor((diff / (1000 * 60)) % 60);
    seconds = Math.floor((diff / 1000) % 60);

    updateCountdownInnerHTML(hours, minutes, seconds);
  }

  updateCountdown();
  setInterval(updateCountdown, 1000);
</script>
