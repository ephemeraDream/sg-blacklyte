{% comment %}
 cart: pc端, 鼠标滑到cart icon时出现
{% endcomment %}

<style>
  .header-nav-cart{
    width: 396px;
    background-color: #fff;
    box-shadow: 0px 0px 4px 0px #00000040;
    border-radius: 0 0 10px 10px;
    position: absolute;
    top: 60px;
    right: 16%;
    overflow: hidden;
    opacity: 0;
    max-height: 0;
    transition: max-height 0.5s cubic-bezier(0.4,0,0.2,1), opacity 0.3s;
  }
 
  .header-nav-cart .cart-container{
    display: flex;
    border-top: 1px solid #F3F3F3;
  }
  .header-nav-cart .cart-container.cart-container-empty{
    padding: 25px 27px;
  }
  .header-nav-cart .cart-container .cart_doesnot_empty{
    width: 100%;
  }
  .header-nav-cart .cart-container .cart_doesnot_empty .cart_doesnot_empty_cont{
    padding: 0 27px;
    max-height: 500px;
    overflow-y: scroll;
  }
  .header-nav-cart .cart-container .cart_doesnot_empty .cart-item{
    display: flex;
    width: 100%;
    padding: 25px 0;
  }
  .header-nav-cart .cart-container .cart_doesnot_empty .cart-item:not(:last-child){
    border-bottom: 1px solid #F3F3F3;
  }
  /* 购物车商品图 */
  .header-nav-cart .cart-container .cart_doesnot_empty .cart-item .prod_main_block_left{
    width: 62px;
  }
  .header-nav-cart .cart-container .cart_doesnot_empty .cart-item .prod_main_image{ }
  .header-nav-cart .cart-container .cart_doesnot_empty .cart-item .prod_main_image img{
    height: auto;
  }
  .prod_main_block_right{
    display: flex;
    width: calc(100% - 42px);
    justify-content: space-between;
    align-items: center;
    margin-left: 20px;
  }
  .prod_main_block_right .prod_info{
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-direction: column;
  }
  .prod_main_block_right .prod_info .cart-prod-item-option{
    font: 400 14px var(--font-family-1);
    color: #76767F;
    margin-top: 10px;
  }
  /* 规格 */
  .prod_main_block_right .prod_info .cart-prod-item-option .preview-cart-item-variant{
    padding-right: 4px;
  }
  .prod_main_block_right .prod_info .cart-prod-item-option .preview-cart-item-variant:nth-of-type(2),
  .prod_main_block_right .prod_info .cart-prod-item-option .preview-cart-item-variant:nth-of-type(3) {
    position: relative;
    padding-left: 4px;
  }
  
  .prod_main_block_right .prod_info .cart-prod-item-option .preview-cart-item-variant:nth-of-type(2):before{
    display: block;
    content: '';
    width: 1px;
    height: 10px;
    background-color: #76767F;
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
  }
  .prod_main_block_right .prod_info .cart-prod-item-option .preview-cart-item-variant:nth-of-type(3):before{
    display: block;
    content: '';
    width: 1px;
    height: 10px;
    background-color: #76767F;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }
  
  .cart-prod-item-quantity{
    display: flex;
    border: 1px solid #F4F4F5;
    border-radius: 100px;
    padding: 2px;
    margin-top: 10px;
  }
  .cart-prod-item-quantity .mins-icons,
  .cart-prod-item-quantity .maxs-icons{
    width: 20px;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }
  .cart-prod-item-quantity .mins-icons:before{
    display: inline-block;
    content: '';
    width: 10px;
    height: 1px;
    background-color: #000000;
  }
  .cart-prod-item-quantity .quantity-input{
    width: 60px;
    height: 100%;
    border-color: transparent;
    text-align: center;
    padding-inline: inherit;
    padding-block: inherit;
  }
  
  .cart-prod-item-quantity .maxs-icons:before{
    display: inline-block;
    content: '';
    width: 10px;
    height: 1px;
    background-color: #000000;
    position: absolute;
    left: 50%;
    transform: translateX(-5px);
  }
  .cart-prod-item-quantity .maxs-icons:after{
    display: inline-block;
    content: '';
    width: 10px;
    height: 1px;
    background-color: #000000;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translateX(-5px) rotate(90deg);
  }
  .cart-prod-item-price-group{
    display: flex;
    margin-top: 10px;
    align-items: flex-end;
  }
  .cart-prod-item-price-group .cart_final_price_text{
    font: 500 16px var(--font-family-1);
    color: #262629;
    margin-right: 10px;
  }
  .cart-prod-item-price-group .cart_original_price{
    font: 400 14px var(--font-family-1);
    color: #76767F;
    text-decoration: line-through;
  }
  .prod_main_block_right .remove_icon{
    width: 18px;
    height: 18px;
    cursor: pointer;
  }
  .prod_main_block_right .remove_icon svg{
    fill: none;
    stroke: none;
    width: 100%;
    height: 100%;
  }
  .cart_bottom_btns{
    width: 100%;
  }
  .cart_bottom_btns.cart_bottom_btns_line{
    border-top: 1px solid #F3F3F3;
    padding: 0 27px;
  }
  .cart_bottom_btns .cart_subtotal{
    display: flex;
    justify-content: space-between;
    font: 500 16px var(--font-family-1);
    color: #262629;
    margin-top: 15px;
  }
  .cart_bottom_btns .cart_bottom_checkout_btn{
    font: 500 18px var(--font-family-1);
    color: #fff;
    background-color: #429BFF;
    border: 1px solid #429BFF;
    width: 100%;
    padding: 15px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 100px;
    margin-top: 16px;
    cursor: pointer;
    margin-bottom: 25px;
  }
  .cart_bottom_btns .cart_bottom_checkout_btn:hover{
    border-color: #429BFF;
    background-color: #fff;
    color: #429BFF;
  }
  
  /* 购物车为空时 */
  .header-nav-cart .cart-container .empty_cart{
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  .header-nav-cart .cart-container .empty_cart .text{
    font: 400 18px var(--font-family-1);
    color: #767679;
  }
  .header-nav-cart .cart-container .empty_cart .empty_cart_shopnow{
    font: 500 18px var(--font-family-1);
    color: #fff;
    background-color: #429BFF;
    border: 1px solid #429BFF;
    margin-top: 20px;
    width: 100%;
    text-align: center;
    border-radius: 100px;
    padding: 15px 0;
    transition: all .35s ease-in-out;
  }
  .header-nav-cart .cart-container .empty_cart .empty_cart_shopnow:hover{
    background-color: #fff;
    color: #429BFF;
    border-color: #429BFF;
  }

  /* loading */
  .cart-container .loading-container{
    opacity: 0;
    display: none;
    transition: all .3s ease-in-out;
  }
  .cart-container.is-loading .loading-container{
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.3);
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
  }
  .cart-container.is-loading .loading-container svg{
    width: 50px;
    height: 50px;
  }
  @media (min-width: 1025px) and (max-width: 1480px){
    .header-nav-cart{
      right: 60px;
    }
  }
</style>

<div class="header-nav-cart" data-section="{{ section.id }}">
  <div class="cart-container {% if cart.items.size == 0 %}cart-container-empty{% endif %}">
    {% if cart.items.size > 0 %}
      <div class="cart_doesnot_empty">
        <div class="cart_doesnot_empty_cont">
          {%- for item in cart.items -%}
            <div class="cart-item" data-variant="{{ item.variant.id }}">
              <div class="prod_main_block_left">
                <div class="prod_main_image">
                  <img srcset="{{ item.image | img_url: '120x' }}" src="{{ item.image | img_url: '120x' }}" alt="{{ item.title | escape }}" sizes="120px" loading="lazy" width="{{ item.image.width }}" height="{{ item.image.height }}">
                </div>
              </div>
              <div class="prod_main_block_right">
                <div class="prod_info">
                  <!-- product Title -->
                  <a class="title" href="{{ item.url }}">
                    <span class="text">{{ item.product.title | escape }}</span>
                  </a>
                  <!-- product variants -->
                  {%- if item.product.variants.size != 0 -%}
                    {%- unless item.variant.title contains 'Default' -%}
                        <div class="cart-prod-item-option">
                            {%- assign variant_parts = item.variant.title | split: ' / ' %}
                            {%- for part in variant_parts -%}
                                <span class="preview-cart-item-variant">{{ part }}</span>
                            {%- endfor -%}
                        </div>
                    {%- endunless -%}
                  {%- endif -%}
                  <!-- count-quantity -->
                  <div class="cart-prod-item-quantity" data-product="{{ item.product_id }}" data-variant="{{ item.variant.id }}">
                    <span class="mins-icons"></span>
                    <input class="quantity-input" 
                           name="quantity" 
                           id="upsell-update-{{ item.id }}" 
                           data-qtt-id1="quantity{{ item.id }}" 
                           value="{{ item.quantity }}" 
                           type="text"{% if item.variant.inventory_management != null and item.variant.inventory_quantity > 0 %} 
                           data-inventory-quantity="{{ item.variant.inventory_quantity }}"{% endif %} 
                           data-cart-quantity 
                           data-cart-quantity-id="{{ item.id }}" 
                           data-line="{{ item.key }}" 
                           data-index="{{ item.index | plus: 1 }}" />
                    <span class="maxs-icons"></span>
                  </div>
                  <!-- price group -->
                  <div class="cart-prod-item-price-group">
                    {%- assign current_variant = item.variant -%}
                    {%- if item.original_price != item.final_price -%}
                      <span class="cart_final_price_text">{{ item.final_price | money }}</span>
                      <span class="cart_original_price">{{ item.original_price | money }}</span>
                    {% elsif current_variant.compare_at_price > current_variant.price %}
                      <span class="cart_current_price">{{ current_variant.price | money }}</span>
                      <span class="cart_current_compare_price">{{ current_variant.compare_at_price | money }}</span>
                    {% else %}
                      <span class="cart_final_original_price">{{ item.original_price | money }}</span>
                    {%- endif -%}
                  </div>
                </div>
                <div class="remove_icon" data-variant="{{ item.variant.id }}" data-index="{{ item.index | plus: 1 }}">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="8.97852" cy="8.97852" r="8.97852" fill="#CED3D8"/>
                    <path d="M5.32031 5.32031L12.5885 12.5885" stroke="white" stroke-width="1.4"/>
                    <path d="M12.5879 5.32031L5.3197 12.5885" stroke="white" stroke-width="1.4"/>
                  </svg>
                </div>
              </div>
            </div>
          {%- endfor -%}
        </div>
        <div class="cart_bottom_btns {% if cart.items.size > 0 %}cart_bottom_btns_line{% endif %}">
          <div class="cart_subtotal">
            <span class="price_label">{{ 'general.cart.subtotal' | t }}</span>
            <span class="price_cart">{{ cart.total_price | money }}</span>
          </div>
          <a role="link" href="/checkout" class="cart_bottom_checkout_btn">{{ 'sections.cart.checkout' | t }}</a>
        </div>
      </div>
    {% else %}
      <div class="empty_cart">
        <div class="text">{{ 'sections.cart.empty' | t }}</div>
        <a class="empty_cart_shopnow" role="link" href="/collections/all">{{ 'products.product.shop_now' | t }}</a>
      </div>
    {% endif %}
    <div class="loading-container">
      <svg class="spinner" width="44" height="44" viewBox="0 0 44 44" aria-hidden="true" focusable="false" role="presentation" xmlns="http://www.w3.org/2000/svg">
        <circle
          class="spinner-path"
          fill="none"
          stroke="#555"
          stroke-width="2"
          stroke-linecap="round"
          cx="22"
          cy="22"
          r="20"
          stroke-dasharray="90 150"
          stroke-dashoffset="0"
        >
          <animateTransform
            attributeName="transform"
            type="rotate"
            from="0 22 22"
            to="360 22 22"
            dur="0.8s"
            repeatCount="indefinite"
          />
        </circle>
      </svg>
    </div>
  </div>
</div>
<script>
  if(window.location.pathname != '/cart') {
    // 当鼠标滑过cart icon时, 购物车中的商品出现. 购物车内没有商品时,显示为空的样式
    $('.header--cart').on('mouseenter', function(){
      // 显示购物车
      $('.header-nav-cart').css({
        'opacity': '1',
        'max-height': '630px'
      });
      // 关闭其他相关
      $('.header-nav-section').css({
          'opacity': '0',
          'max-height': '0',
          'border-top': 'none',
          'border-bottom': 'none'
      });
      $('.header-nav-bundle').css({
          'opacity': '0',
          'max-height': '0',
          'border-top': 'none',
          'border-bottom': 'none'
      });

    })

    
    // 当鼠标滑出cart icon时,判断鼠标是否在header-nav-cart内, 没有的话隐藏header-nav-cart dom
    $('.header--cart').on('mouseleave', function(){
      setTimeout(function(){
        // 如果此时鼠标还在 cart 区域，不隐藏
        if (!$('.header-nav-cart:hover').length && !$('.header--cart:hover').length) {
          $('.header-nav-cart').css({
            'opacity': '0',
            'max-height': '0'
          });
        }
      }, 100);
    })
    
  
    
    // 当鼠标离开 .header-nav-cart 时隐藏
    $('.header-nav-cart').on('mouseleave', function() {
        $(this).css({
          'opacity': '0',
          'max-height': '0'
        });
    });
  }
  
  
  // 点击加号 修改购物车的商品
  $('.cart-container').on('click', '.maxs-icons', function() {
    // 增加loading
    $('.cart-container').addClass('is-loading')
    
    const $quantityBox = $(this).closest('.cart-prod-item-quantity');
    const variantId = $quantityBox.data('variant');
    const $quantitySpan = $quantityBox.find('.quantity-input');
    const index = $quantitySpan.data('index');
    const lineId = $quantitySpan.data('line');
    
    const currentQty = $quantitySpan.val()
    const newQty = currentQty - 0 + 1
    $quantitySpan.val(newQty)
    updateCartItemQuantity(index, newQty, lineId)
  })
  // 减少购物车商品的数量
  $('.cart-container').on('click', '.mins-icons', function() {
    // 增加loading
    $('.cart-container').addClass('is-loading')

    const $quantityBox = $(this).closest('.cart-prod-item-quantity');
    const variantId = $quantityBox.data('variant');
    const $quantitySpan = $quantityBox.find('.quantity-input');
    const index = $quantitySpan.data('index');
    const lineId = $quantitySpan.data('line');
    
    const currentQty = $quantitySpan.val()
    const newQty = currentQty - 1
    $quantitySpan.val(newQty)
    updateCartItemQuantity(index, newQty, lineId)
  })
  // input值修改
  $('.cart-container').on('blur', '.cart-prod-item-quantity [data-cart-quantity]', function() {
    // 1. 校验输入值
    let $input = $(this);
    let val = $input.val();
  
    // 只允许数字
    val = val.replace(/[^0-9]/g, '');
  
    // 范围校验
    if (val === '' || isNaN(val) || val < 1) {
      val = 1;
    } else if (parseInt(val, 10) > 20) {
      val = 20;
    }
    $input.val(val);

    
    // 增加loading
    $('.cart-container').addClass('is-loading')

    const $quantityBox = $(this).closest('.cart-prod-item-quantity');
    const variantId = $quantityBox.data('variant');
    const $quantitySpan = $quantityBox.find('.quantity-input');
    const index = $quantitySpan.data('index');
    const lineId = $quantitySpan.data('line');
    
    const currentQty = $quantitySpan.val()
    
    updateCartItemQuantity(index, currentQty, lineId)
    
  })

  // key enter
  $('.cart-container').on('keydown', '.quantity-input', function(event) {
    if (event.key === 'Enter' || event.keyCode === 13) {
      // 增加loading
      $('.cart-container').addClass('is-loading')
  
      const $quantityBox = $(this).closest('.cart-prod-item-quantity');
      const variantId = $quantityBox.data('variant');
      const $quantitySpan = $quantityBox.find('.quantity-input');
      const index = $quantitySpan.data('index');
      const lineId = $quantitySpan.data('line');
      
      const currentQty = $quantitySpan.val()
      
      updateCartItemQuantity(index, currentQty, lineId)
    }
  })
  
  // 删除购物车中的这一条数据
  $('.cart-container').on('click', '.remove_icon', function() {
    // 增加loading
    $('.cart-container').addClass('is-loading')
    
    // item index, 数量为0, 接口用change, 刷新购物车html数据
    const variantId = $(this).data('variant')
    const itemIndex = $(this).data('index')
    
    
    $.ajax({
      type: 'POST',
      url: '/cart/change.js',
      data: JSON.stringify({
        line: itemIndex,
        quantity: 0,
        sections_url: window.location.pathname
      }),
      dataType: 'json',
      contentType: 'application/json',
      success: function(cart) {
        refreshCartItems(cart)
      },
      error: function() {
        refreshCartItems(cart)
      }
    })
  })

  // 刷新购物车
  function refreshCartItems(cart) {
    const sectionId = $('.header-nav-cart').data('section')
    $.ajax({
      type: "GET",
      url: `/cart?section_id=${sectionId}`,
      cache: false,
      success: function(data) {
        // 解析返回的 section HTML
        let response = $(data);
  
        // 提取新的商品列表块
        let newCartContent = response.find('.cart_doesnot_empty_cont').html();
        $('.cart_doesnot_empty_cont').html(newCartContent);
  
        // 刷新底部按钮和小计
        let newCartBottom = response.find('.cart_bottom_btns').html();
        $('.cart_bottom_btns').html(newCartBottom);
  
        // 检查是否已变为空购物车
        if(response.find('.cart_doesnot_empty').length === 0) {
          $('.cart_doesnot_empty').remove();
          $('.cart-container').addClass('cart-container-empty');
          $('.cart-container').append(response.find('.empty_cart'));
        }
  
        // 取消 loading
        $('.cart-container').removeClass('is-loading');
      },
      error: function() { },
      complete: function() {
        $('body').find('[data-cart-count]').text(cart.item_count)
        if (cart.item_count == 1){
            $('body').find('[data-cart-text]').text(window.cartStrings.item)
        } else {
            $('body').find('[data-cart-text]').text(window.cartStrings.items)
        }
      }
    })
  }

  // 更新购物车商品信息
  function updateCartItemQuantity(index, newQty, lineId) {
    $.ajax({
      type: 'POST',
      url: '/cart/change.js',
      data: JSON.stringify({
        line: index,
        quantity: newQty,
        sections_url: window.location.pathname,
      }),
      dataType: 'json',
      contentType: 'application/json',
      success: function(cart){
        refreshCartItems(cart)
      },
      error: function(xhr, status, error){
        refreshCartItems(cart)
      }
    })
  }

  // input校验
  $(document).on('input', '.quantity-input', function() {
    let val = $(this).val();
    // 只允许输入数字
    val = val.replace(/[^0-9]/g, '');
    // 转为数字判断最大值
    if (val !== '') {
      val = Math.max(1, Math.min(20, parseInt(val, 10)));
    }
    $(this).val(val);
  });

</script>
